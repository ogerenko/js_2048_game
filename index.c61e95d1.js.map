{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.initialState = initialState;\n        this.board = initialState || [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.boardScore = 0;\n        this.currentStatus = \"idle\";\n        this.isAbleToMove = true;\n        this.isGameActive = false;\n        this.isGameWon = false;\n        this.isGameLost = false;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.isGameActive) this.moveTo(\"left\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.isGameActive) this.moveTo(\"right\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.isGameActive) this.moveTo(\"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.isGameActive) this.moveTo(\"down\");\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.boardScore;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                switch(true){\n                    case this.isGameWon:\n                        this.currentStatus = \"win\";\n                        break;\n                    case this.isGameLost:\n                        this.currentStatus = \"lose\";\n                        break;\n                    case this.isGameActive:\n                        this.currentStatus = \"playing\";\n                        break;\n                    default:\n                        this.currentStatus = \"idle\";\n                        break;\n                }\n                return this.currentStatus;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.isGameActive = true;\n                this.placeNewCell();\n                this.placeNewCell();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.boardScore = 0;\n                this.isGameActive = true;\n                this.isGameWon = false;\n                this.isGameLost = false;\n                this.placeNewCell();\n                this.placeNewCell();\n            }\n        },\n        {\n            key: \"placeNewCell\",\n            value: function placeNewCell() {\n                var randomRow, randomColumn;\n                do {\n                    randomRow = Math.floor(Math.random() * 4);\n                    randomColumn = Math.floor(Math.random() * 4);\n                }while (this.board[randomRow][randomColumn] !== 0);\n                this.board[randomRow][randomColumn] = this.createCell();\n            }\n        },\n        {\n            key: \"createCell\",\n            value: function createCell() {\n                var randomValue = Math.random();\n                return randomValue < 0.1 ? 4 : 2;\n            }\n        },\n        {\n            key: \"moveTo\",\n            value: function moveTo(direction) {\n                var _this = this;\n                if (!this.isGameActive) return;\n                var numColumns = this.board[0].length;\n                var currentTable = JSON.parse(JSON.stringify(this.board));\n                var addScore = 0;\n                var transpose = function(table) {\n                    return table[0].map(function(_, colIndex) {\n                        return table.map(function(row) {\n                            return row[colIndex];\n                        });\n                    });\n                };\n                var reverseRow = function(table) {\n                    return table.map(function(row) {\n                        return row.slice().reverse();\n                    });\n                };\n                var moveTable = function(table) {\n                    var newTable = table.map(function(row) {\n                        var newRow = row.filter(function(num) {\n                            return num !== 0;\n                        });\n                        var zerosToAdd = numColumns - newRow.length;\n                        newRow = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(Array(zerosToAdd).fill(0)).concat((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(newRow));\n                        for(var i = newRow.length; i >= 0; i--)if (newRow[i - 1] === newRow[i]) {\n                            newRow[i - 1] *= 2;\n                            newRow[i] = 0;\n                            addScore += newRow[i - 1];\n                            i--;\n                        }\n                        newRow = newRow.filter(function(num) {\n                            return num !== 0;\n                        });\n                        var zerosToAddEnd = numColumns - newRow.length;\n                        newRow = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(Array(zerosToAddEnd).fill(0)).concat((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(newRow));\n                        return newRow;\n                    });\n                    return newTable;\n                };\n                var isGameOver = function() {\n                    var GAME_FIELD = 4;\n                    for(var i = 0; i < GAME_FIELD; i++)for(var j = 0; j < GAME_FIELD; j++){\n                        if (_this.board[i][j] === 0) return false;\n                    }\n                    for(var i1 = 0; i1 < GAME_FIELD; i1++)for(var j1 = 0; j1 < GAME_FIELD; j1++){\n                        if (j1 < GAME_FIELD - 1 && _this.board[i1][j1] === _this.board[i1][j1 + 1]) return false;\n                        if (i1 < GAME_FIELD - 1 && _this.board[i1][j1] === _this.board[i1 + 1][j1]) return false;\n                    }\n                    _this.isGameActive = false;\n                    _this.isGameLost = true;\n                    return true;\n                };\n                var makeMove = function(moveToSide) {\n                    if (JSON.stringify(moveToSide) === JSON.stringify(currentTable)) return;\n                    _this.board = moveToSide;\n                    currentTable = moveToSide;\n                    if (_this.board.flat().includes(2048)) {\n                        _this.isGameActive = false;\n                        _this.isGameWon = true;\n                        _this.getStatus();\n                        return;\n                    }\n                    _this.placeNewCell();\n                    if (isGameOver()) _this.isAbleToMove = false;\n                };\n                switch(direction){\n                    case \"up\":\n                        var moveUp = transpose(reverseRow(moveTable(reverseRow(transpose(currentTable)))));\n                        makeMove(moveUp);\n                        this.boardScore += addScore;\n                        break;\n                    case \"down\":\n                        var moveDown = transpose(moveTable(transpose(currentTable)));\n                        makeMove(moveDown);\n                        this.boardScore += addScore;\n                        break;\n                    case \"right\":\n                        var moveRight = moveTable(currentTable);\n                        makeMove(moveRight);\n                        this.boardScore += addScore;\n                        break;\n                    case \"left\":\n                        var moveLeft = reverseRow(moveTable(reverseRow(currentTable)));\n                        makeMove(moveLeft);\n                        this.boardScore += addScore;\n                        break;\n                }\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$container = document.querySelector(\".container\");\nvar $197cd56b15c33885$var$button = $197cd56b15c33885$var$container.querySelector(\".button\");\nvar $197cd56b15c33885$var$messageStart = $197cd56b15c33885$var$container.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageLose = $197cd56b15c33885$var$container.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = $197cd56b15c33885$var$container.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$scoreInfo = $197cd56b15c33885$var$container.querySelector(\".game-score\");\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$button.textContent === \"Start\") {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n    } else $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$updateUI();\n});\ndocument.addEventListener(\"keydown\", function(keyboard) {\n    switch(keyboard.key){\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        default:\n            break;\n    }\n    $197cd56b15c33885$var$updateUI();\n});\nfunction $197cd56b15c33885$var$updateUI() {\n    var gameState = $197cd56b15c33885$var$game.getState().flat();\n    var fieldCells = $197cd56b15c33885$var$container.querySelectorAll(\".field-cell\");\n    fieldCells.forEach(function(fieldCell, index) {\n        var classList = fieldCell.classList;\n        var classArray = classList;\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = classArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var className = _step.value;\n                if (className !== \"field-cell\") {\n                    classList.remove(className);\n                    fieldCell.textContent = \"\";\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        if (gameState[index] !== 0) {\n            fieldCell.classList.add(\"field-cell--\".concat(gameState[index]));\n            fieldCell.textContent = gameState[index];\n        }\n    });\n    $197cd56b15c33885$var$scoreInfo.textContent = $197cd56b15c33885$var$game.getScore();\n    if ($197cd56b15c33885$var$game.getStatus() === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n    else if ($197cd56b15c33885$var$game.getStatus() === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n}\n\n})();\n//# sourceMappingURL=index.c61e95d1.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst container = document.querySelector('.container');\nconst button = container.querySelector('.button');\nconst messageStart = container.querySelector('.message-start');\nconst messageLose = container.querySelector('.message-lose');\nconst messageWin = container.querySelector('.message-win');\nconst scoreInfo = container.querySelector('.game-score');\n\nbutton.addEventListener('click', () => {\n  if (button.textContent === 'Start') {\n    game.start();\n\n    button.textContent = 'Restart';\n    button.classList.add('restart');\n    button.classList.remove('start');\n  } else {\n    game.restart();\n  }\n\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n\n  updateUI();\n});\n\ndocument.addEventListener('keydown', (keyboard) => {\n  switch (keyboard.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    default:\n      break;\n  }\n\n  updateUI();\n});\n\nfunction updateUI() {\n  const gameState = game.getState().flat();\n  const fieldCells = container.querySelectorAll('.field-cell');\n\n  fieldCells.forEach((fieldCell, index) => {\n    const classList = fieldCell.classList;\n    const classArray = classList;\n\n    for (const className of classArray) {\n      if (className !== 'field-cell') {\n        classList.remove(className);\n        fieldCell.textContent = '';\n      }\n    }\n\n    if (gameState[index] !== 0) {\n      fieldCell.classList.add(`field-cell--${gameState[index]}`);\n      fieldCell.textContent = gameState[index];\n    }\n  });\n\n  scoreInfo.textContent = game.getScore();\n\n  if (game.getStatus() === 'lose') {\n    messageLose.classList.remove('hidden');\n  } else if (game.getStatus() === 'win') {\n    messageWin.classList.remove('hidden');\n  }\n}\n","'use strict';\n\nclass Game {\n  constructor(initialState) {\n    this.initialState = initialState;\n\n    this.board = initialState || [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.boardScore = 0;\n    this.currentStatus = 'idle';\n    this.isAbleToMove = true;\n    this.isGameActive = false;\n    this.isGameWon = false;\n    this.isGameLost = false;\n  }\n\n  moveLeft() {\n    if (this.isGameActive) {\n      this.moveTo('left');\n    }\n  }\n  moveRight() {\n    if (this.isGameActive) {\n      this.moveTo('right');\n    }\n  }\n  moveUp() {\n    if (this.isGameActive) {\n      this.moveTo('up');\n    }\n  }\n  moveDown() {\n    if (this.isGameActive) {\n      this.moveTo('down');\n    }\n  }\n\n  getScore() {\n    return this.boardScore;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    switch (true) {\n      case this.isGameWon:\n        this.currentStatus = 'win';\n        break;\n      case this.isGameLost:\n        this.currentStatus = 'lose';\n        break;\n      case this.isGameActive:\n        this.currentStatus = 'playing';\n        break;\n      default:\n        this.currentStatus = 'idle';\n        break;\n    }\n\n    return this.currentStatus;\n  }\n\n  start() {\n    this.isGameActive = true;\n    this.placeNewCell();\n    this.placeNewCell();\n  }\n\n  restart() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.boardScore = 0;\n    this.isGameActive = true;\n    this.isGameWon = false;\n    this.isGameLost = false;\n\n    this.placeNewCell();\n    this.placeNewCell();\n  }\n\n  placeNewCell() {\n    let randomRow, randomColumn;\n\n    do {\n      randomRow = Math.floor(Math.random() * 4);\n      randomColumn = Math.floor(Math.random() * 4);\n    } while (this.board[randomRow][randomColumn] !== 0);\n\n    this.board[randomRow][randomColumn] = this.createCell();\n  }\n\n  createCell() {\n    const randomValue = Math.random();\n\n    return randomValue < 0.1 ? 4 : 2;\n  }\n\n  moveTo(direction) {\n    if (!this.isGameActive) {\n      return;\n    }\n\n    const numColumns = this.board[0].length;\n    let currentTable = JSON.parse(JSON.stringify(this.board));\n    let addScore = 0;\n\n    const transpose = (table) => {\n      return table[0].map((_, colIndex) => table.map((row) => row[colIndex]));\n    };\n\n    const reverseRow = (table) => {\n      return table.map((row) => row.slice().reverse());\n    };\n\n    const moveTable = (table) => {\n      const newTable = table.map((row) => {\n        let newRow = row.filter((num) => num !== 0);\n        const zerosToAdd = numColumns - newRow.length;\n\n        newRow = [...Array(zerosToAdd).fill(0), ...newRow];\n\n        for (let i = newRow.length; i >= 0; i--) {\n          if (newRow[i - 1] === newRow[i]) {\n            newRow[i - 1] *= 2;\n            newRow[i] = 0;\n            addScore += newRow[i - 1];\n            i--;\n          }\n        }\n\n        newRow = newRow.filter((num) => num !== 0);\n\n        const zerosToAddEnd = numColumns - newRow.length;\n\n        newRow = [...Array(zerosToAddEnd).fill(0), ...newRow];\n\n        return newRow;\n      });\n\n      return newTable;\n    };\n\n    const isGameOver = () => {\n      const GAME_FIELD = 4;\n\n      for (let i = 0; i < GAME_FIELD; i++) {\n        for (let j = 0; j < GAME_FIELD; j++) {\n          if (this.board[i][j] === 0) {\n            return false;\n          }\n        }\n      }\n\n      for (let i = 0; i < GAME_FIELD; i++) {\n        for (let j = 0; j < GAME_FIELD; j++) {\n          if (j < GAME_FIELD - 1 && this.board[i][j] === this.board[i][j + 1]) {\n            return false;\n          }\n\n          if (i < GAME_FIELD - 1 && this.board[i][j] === this.board[i + 1][j]) {\n            return false;\n          }\n        }\n      }\n\n      this.isGameActive = false;\n      this.isGameLost = true;\n\n      return true;\n    };\n\n    const makeMove = (moveToSide) => {\n      if (JSON.stringify(moveToSide) === JSON.stringify(currentTable)) {\n        return;\n      }\n\n      this.board = moveToSide;\n      currentTable = moveToSide;\n\n      if (this.board.flat().includes(2048)) {\n        this.isGameActive = false;\n        this.isGameWon = true;\n\n        this.getStatus();\n\n        return;\n      }\n\n      this.placeNewCell();\n\n      if (isGameOver()) {\n        this.isAbleToMove = false;\n      }\n    };\n\n    switch (direction) {\n      case 'up':\n        const moveUp = transpose(\n          reverseRow(moveTable(reverseRow(transpose(currentTable)))),\n        );\n\n        makeMove(moveUp);\n\n        this.boardScore += addScore;\n        break;\n\n      case 'down':\n        const moveDown = transpose(moveTable(transpose(currentTable)));\n\n        makeMove(moveDown);\n\n        this.boardScore += addScore;\n        break;\n\n      case 'right':\n        const moveRight = moveTable(currentTable);\n\n        makeMove(moveRight);\n\n        this.boardScore += addScore;\n        break;\n\n      case 'left':\n        const moveLeft = reverseRow(moveTable(reverseRow(currentTable)));\n\n        makeMove(moveLeft);\n\n        this.boardScore += addScore;\n        break;\n    }\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","staticProps","Game","initialState","instance","Constructor","board","boardScore","currentStatus","isAbleToMove","isGameActive","isGameWon","isGameLost","value","moveTo","placeNewCell","randomRow","randomColumn","Math","floor","random","createCell","randomValue","direction","_this","numColumns","currentTable","JSON","parse","stringify","addScore","transpose","table","map","_","colIndex","row","reverseRow","reverse","moveTable","newRow","filter","num","fill","concat","isGameOver","j","i1","j1","GAME_FIELD","makeMove","moveToSide","flat","includes","getStatus","$197cd56b15c33885$var$container","document","querySelector","$197cd56b15c33885$var$button","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$scoreInfo","$197cd56b15c33885$var$updateUI","gameState","getState","fieldCells","querySelectorAll","forEach","fieldCell","index","classList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","classArray","next","done","className","remove","textContent","err","return","add","getScore","addEventListener","start","restart","keyboard","moveUp","moveDown","moveLeft","moveRight"],"version":3,"file":"index.c61e95d1.js.map"}